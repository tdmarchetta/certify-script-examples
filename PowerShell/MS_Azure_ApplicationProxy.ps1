#-----------------------------------------------#
#------CTW_ApplicationProxy---------------------#
#------Author: Taylor D. Marchetta--------------#
#------https://blog.marchetta.me----------------#
#------Verison 5.0.0----------------------------#
#-----------------------------------------------#

# Hello, I put a lot of work and effort into getting this to work. If you find this useful. Please consider donating to my buymeacoffee.com. https://www.buymeacoffee.com/tdmarchetta
# At this time (05/07/2024), I'm only able to get it to work with the beta version "Update-MgBetaApplication" command.

<#
.SYNOPSIS
Updates the Azure App Registration with a new certificate generated by Certify the Web.

.DESCRIPTION
This script is used to update the Azure App Registration with a new certificate that was generated by Certify the Web. It reads the certificate path and password from the Certify the Web result object, converts the certificate to a base64 string, and then updates the Azure App Registration with the new certificate.

.PARAMETER result
The result object from Certify the Web, which contains the path to the certificate and the thumbprint of the certificate.

.NOTES
- This script requires the Microsoft.Graph.Applications PowerShell module to be installed.
- The script assumes that the Azure App Registration has the "Application.ReadWrite.OwnedBy" permission and that the self-signed TLS certificate thumbprint has been added to the Certificates & secrets section of the App Registration.
#>

# On Microsoft Azure App registrations
# Added Permission "Application.ReadWrite.OwnedBy"
# Added Cerificates & secrets "< Self sign TLS cert thumbprint >"

param ($result) # This is the result object from Certify the Web. It contains the path to the certificate and the thumbprint of the certificate. This is used to update the Azure App Registration with the new certificate.

#------Variables------------#
$ApplicationID = "< App ID >" # Application ID
$TenantID = "< Tenant ID >" # Tenant ID
$authCertThumbprint = "< Self sign TLS cert thumbprint >" # Authenticates to Azure App with a the CTW servers certificate thumbprint (self signed)
$certPFXPassword = "< PFX Password >" # Password that protects the pfx file
#------End Variables--------#

# Get the certificate from the local machine's Personal certificate store
$authCert = Get-Item -Path Cert:\LocalMachine\My\$authCertThumbprint

If (($null -eq $result) -and ($result.IsSuccess -eq "$false") -and ($null -ne $authCert) -and ($result.ManagedItem.CertificatePreviousThumbprintHash -eq $result.ManagedItem.CertificateThumbprintHash)) { 
	Write-Host "`r`n`#-------------------------------#"
	Write-Host DateTime: $(Get-Date -Format "MM-dd-yyyy HH:mm:ss")
	Write-Host "Certify the Web: Failed in some capacity."
	Write-Host "Result are: "$($result)" is null?"
	Write-Host "Result are: $($result.IsSuccess) CTW result is false?"
	Write-Host "Check if the certificate thumbprint is null or miss typed. Must be installed on the server that CTS is running on. Must be installed on the Local Machine's Personal certificate store: $($authCert) "
	Write-Host "The previous thumbprint hash: $($result.ManagedItem.CertificatePreviousThumbprintHash) and current thumbprint hash: $($result.ManagedItem.CertificateThumbprintHash) match which cannot be allowed."
	Write-Host "#-------------------------------#`r`n"
	Exit
}

Write-Host "`r`n`#-------------------------------#"
Write-Host DateTime: $(Get-Date -Format "MM-dd-yyyy HH:mm:ss")
Write-Host "Result Success: $($result.IsSuccess)"
Write-Host "Cert Path: $($result.ManagedItem.CertificatePath)"
Write-Host "The previous thumbprint hash and current thumbprint hash do not match. This is expected. Previous Thumbprint Hash: $($result.ManagedItem.CertificatePreviousThumbprintHash), Current Thumhprint Hash: $($result.ManagedItem.CertificateThumbprintHash)" 

Import-Module Microsoft.Graph.Applications
Connect-MgGraph -NoWelcome -ClientId $ApplicationID -TenantId $TenantID -CertificateThumbprint $authCertThumbprint # -ClientId: is also "Application (client) ID", Self-gen for 1 year certificate on server itself to auth with Azure

$Id = Get-MgApplication | Where-Object { $_.AppId -eq $ApplicationID } |  Select-Object -ExpandProperty Id # Id in App Registration
$certPfxFilePath = $result.ManagedItem.CertificatePath # Path to the certificate that was generated by Certify the Web
$certBytes = [System.IO.File]::ReadAllBytes($certPfxFilePath) # Read the certificate into a byte array
$base64String = [Convert]::ToBase64String($certBytes) # Convert the byte array to a base64 string
$certPassword = $certPFXPassword # Password that protects the pfx file
 
$params = @{ 
	onPremisesPublishing = @{
		verifiedCustomDomainKeyCredential      = @{
			type  = "X509CertAndPassword"; 
			value = $base64String 
		};

		verifiedCustomDomainPasswordCredential = @{ value = $certPassword };
	}
}
 
Update-MgBetaApplication -ApplicationId $Id -BodyParameter $params # Update the Azure App Registration with the new certificate.

Write-Host "Updated the Azure App Registration with the new certificate."
Write-Host "#-------------------------------#`r`n"